{"version":3,"sources":["components/common/Navbar.jsx","components/common/Footer.jsx","components/login-register/Login.jsx","components/login-register/Register.jsx","components/common/PageNotFound.jsx","components/common/Logout.jsx","resources/default-user-image.jpeg","components/dashboard/AboutUser.jsx","resources/loading_gif.gif","resources/Vocabulary.png","resources/Programming.jpg","components/dashboard/OptionsForUser.jsx","components/dashboard/Dashboard.jsx","components/homepage/Poster.jsx","components/homepage/Options.jsx","components/homepage/HomePage.jsx","components/common/LoaderContainer.jsx","components/SiteLandingPage.jsx","components/private/options/vocabulary/Vocabulary.jsx","components/private/options/programming/Programming.jsx","components/private/profile/UserNotFound.jsx","components/private/profile/BottomContainer.jsx","components/private/profile/UserProfile.jsx","components/private/profile/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_ref","contents","_jsxs","className","children","_jsx","NavLink","to","map","component","index","link","name","Footer","_Fragment","href","rel","target","Login","history","useHistory","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","IconStyle","height","width","marginRight","display","LoginUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","data","wrap","_context","prev","next","preventDefault","fetch","concat","method","credentials","headers","body","JSON","stringify","sent","json","status","succesMsg","message","toast","success","position","POSITION","TOP_CENTER","autoClose","setTimeout","push","errorMsg","error","console","clear","stop","_x","apply","arguments","ToastContainer","style","fontSize","hideProgressBar","newestOnTop","closeOnClick","rtl","limit","theme","pauseOnFocusLoss","draggable","pauseOnHover","onSubmit","FaMailBulk","value","required","type","autoComplete","onChange","placeholder","FaLock","Link","Register","username","phone","cpassword","user","setUser","iconStyling","handleInputs","eventName","eventValue","_objectSpread","_defineProperty","RegisterUser","FaUserAlt","maxLength","FaPhoneAlt","minLength","PageNotFound","color","Logout","useEffect","_callLogout","Accept","t0","log","callLogout","AboutUser","userImg","setUserImg","profilePic","DefaultImage","regDate","registeredOn","year","substring","month","day","src","alt","id","OptionsForUser","optionsArray","imgSrc","VocabularyImage","description","ProgrammingImage","option","Dashboard","LoadingGIF","Poster","iconArray","alias","FaBook","linkToID","FaCode","icon","ScrollLink","smooth","offset","Options","HomePage","LoaderContainer","top","left","transform","SiteLandingPage","dataFetched","setDataFetched","rootUser","setRootUser","_useState5","_useState6","userLoggedIn","setUserLoggedIn","webURL","_siteLandingPage","siteLandingPage","Loader","Vocabulary","allWords","setAllWords","searchResults","setSearchResults","searchQuery","setSearchQuery","_useState7","_useState8","addButton","setAddButton","_useState9","_useState10","wordSortType","setWordSortType","searchBoxRef","useRef","wordClickCount","timer","_useState11","_useState12","allLabels","setAllLabels","_useState13","_useState14","wordSelected","setWordSelected","_useState15","_useState16","labelFilter","setLabelFilter","_useState17","_useState18","_callVocabulary","current","focus","callVocabulary","wordList","vocabulary","wordObjects","i","length","word","filter","wordObj","SQ","trim","includes","wordExistsAlready","words","labelsOfCurrWord","labels","hasLabel","ErrorToast","SuccessToast","_addNewWord","_callee2","_context2","newWord","filterByLabel","selectedLabel","selectWord","clearTimeout","toLowerCase","googleSearchQuery","window","open","searchWordMeaning","_addNewLabelToWord","_callee3","newLabel","_context3","_removeLabelFromWord","_callee4","removeLabel","_context4","_deleteWord","_callee5","_context5","confirm","ref","toUpperCase","searchBarHandler","FaRegPlusSquare","onClick","currLabel","backgroundColor","FaWindowClose","labelFound","wordLabels","_x3","_x4","removeLabelFromWord","_x2","addNewLabelToWord","FaSortAlphaDown","temp","sort","x","y","idx","onDoubleClick","FaTag","Programming","_callProgramming","callProgramming","UserNotFound","BottomContainer","vocabularyProgress","programmingProgress","userProgress","optionName","addedWords","deletedWords","lastCommit","questionSolved","totalDoubts","solvedDoubts","UserProfile","newUsername","setNewUsername","newPhone","setnewPhone","image","setImage","initialImage","setInitialImage","userImgInputRef","isUpdated","setIsUpdated","SuccesToast","_saveChanges","contentUpdated","event","file","files","substr","reader","FileReader","onloadend","result","readAsDataURL","MdCheckCircleOutline","saveChanges","click","imgButtonClicked","accept","Profile","setUserProgress","_callProfile","callProfile","App","Switch","Route","exact","path","ProfilePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.3f1861df.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = ({contents}) => {\r\n    const appName = \"Rekords\";\r\n\r\n    return(\r\n        <nav className=\"navbar\">\r\n            <NavLink to=\"/\" className=\"app-name\">{appName}</NavLink>\r\n            <div className=\"components\">\r\n            <ul>\r\n                {\r\n                    contents.map((component, index)=>{\r\n                        return <li key={index}><NavLink to={component.link}>{component.name}</NavLink></li>\r\n                    })\r\n                }\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Footer = () =>{\r\n\r\n    const PortfolioURL = \"https://chakshuverma.github.io/Chakshu-Verma-Portfolio/\";\r\n    const DeveloperName = \"Chakshu Verma\";\r\n\r\n    return(\r\n        <>\r\n            <footer className=\"footerbar\">\r\n                <p className=\"text\"><a href={PortfolioURL} rel=\"noopener noreferrer\" target=\"_blank\">{DeveloperName}</a></p>\r\n            </footer>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import './Login-Register.css';\r\nimport React, { useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Navbar from '../common/Navbar';\r\nimport Footer from '../common/Footer';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {FaMailBulk, FaLock} from 'react-icons/fa'\r\n\r\n\r\nconst Login = () =>{\r\n    const history = useHistory();\r\n    const NavbarContents = [];\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const IconStyle = {\r\n        height: '30', \r\n        width: '30',   \r\n        marginRight: '15px', \r\n        display: 'inline',\r\n    };\r\n\r\n    const ErrorToast = (errorMsg) => {\r\n        toast.error(errorMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 4000\r\n        });\r\n    }\r\n\r\n    const SuccesToast = (succesMsg) => {\r\n        toast.success(succesMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1000\r\n        });\r\n    }\r\n\r\n    const LoginUser = async (e) =>{\r\n        e.preventDefault();\r\n        \r\n        const webURL = 'http://localhost:5000';\r\n\r\n        const res = await fetch(`${webURL}/login`,{\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({email, password})\r\n        });\r\n\r\n        const data = await res.json();\r\n        \r\n        // 201 means success\r\n        if(!data || res.status !== 201){\r\n            ErrorToast(data.error);\r\n            console.clear();\r\n        }\r\n        else{\r\n            SuccesToast(data.message);\r\n            setTimeout(() => {\r\n                history.push('/');\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ToastContainer style={{fontSize:\"2rem\"}} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} limit={2} theme={\"dark\"} pauseOnFocusLoss={false} draggable pauseOnHover={false}/>\r\n            <section className=\"login\">\r\n                <div className=\"container\">\r\n                    <Navbar contents={NavbarContents}/>\r\n                    <div className=\"main-content\">\r\n                        <div className=\"center-div\">\r\n                            <h1>Login</h1>\r\n                            <div className=\"form-container\">\r\n                                <form method='POST' onSubmit={LoginUser}>\r\n                                    <div className=\"input-div\">\r\n                                        <FaMailBulk style={IconStyle}/>\r\n                                        <input value={email} name='email' required type=\"email\" autoComplete=\"off\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\"></input>\r\n                                    </div>\r\n                                    <div className=\"input-div\">\r\n                                        <FaLock style={IconStyle}/>\r\n                                        <input value={password} name='password' required type=\"password\" autoComplete=\"off\" onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"></input>\r\n                                    </div>\r\n                                    <div className=\"submit-div\">\r\n                                        <input type=\"submit\" value=\"Sign In\"></input>\r\n                                        <Link to=\"/register\">New User?</Link>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import './Login-Register.css';\r\nimport React,{useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Navbar from '../common/Navbar';\r\nimport Footer from '../common/Footer';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {FaUserAlt, FaMailBulk, FaLock, FaPhoneAlt} from 'react-icons/fa'\r\n\r\nconst Register = () =>{\r\n    const history = useHistory();\r\n\r\n    const NavbarContents = [];\r\n    const [user, setUser] = useState({username: '', phone: '',  email: '', password: '', cpassword: ''});\r\n\r\n    const iconStyling = {\r\n        height: '30', \r\n        width: '30',   \r\n        marginRight: '15px', \r\n        display: 'inline',\r\n    };\r\n\r\n    const handleInputs = (e) => {\r\n        // We've given names to the input fields so we're extracting the name attribute here\r\n        let eventName = e.target.name;\r\n        let eventValue = e.target.value\r\n        \r\n        setUser({...user, [eventName]: eventValue});\r\n    }\r\n\r\n    const ErrorToast = (errorMsg) => {\r\n        toast.error(errorMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 4000\r\n        });\r\n    }\r\n\r\n    const SuccesToast = (succesMsg) => {\r\n        toast.success(succesMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1000\r\n        });\r\n    }\r\n\r\n    const RegisterUser = async (e) =>{\r\n        e.preventDefault();\r\n        const{username, email, phone, password, cpassword} = user;\r\n \r\n        const res = await fetch('http://localhost:5000/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username, email, phone, password, cpassword})\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        // 201 means success\r\n        if(!data || res.status !== 201){\r\n            ErrorToast(data.error);\r\n            console.clear();\r\n        }\r\n        else{\r\n            SuccesToast(data.message);\r\n            setTimeout(() => {\r\n                history.push('./login');\r\n            }, 1000)\r\n        }\r\n    } \r\n\r\n    return(\r\n        <>\r\n            <ToastContainer style={{fontSize:\"2rem\"}} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} limit={2} theme={\"dark\"} pauseOnFocusLoss={false} draggable pauseOnHover={false}/>\r\n            <section className=\"register\">\r\n                <div className=\"container\">\r\n                    <Navbar contents={NavbarContents}/>\r\n                    <div className=\"main-content\">\r\n                        <div className=\"center-div\">\r\n                            <h1>Register</h1>\r\n                            <div className=\"form-container\">\r\n                                <form method='POST' onSubmit={RegisterUser}>\r\n                                    <div className=\"input-div\">\r\n                                        <FaUserAlt style={iconStyling}/>\r\n                                        <input value={user.username} name='username' maxLength=\"10\" required type=\"text\" autoComplete=\"off\" onChange={handleInputs} placeholder=\"Username\"></input>\r\n                                    </div>\r\n                                    <div className=\"input-div\">\r\n                                        <FaPhoneAlt style={iconStyling}/>\r\n                                        <input value={user.phone} name='phone' required type=\"tel\" minLength=\"10\" maxLength=\"10\" autoComplete=\"off\" onChange={handleInputs} placeholder=\"Phone number\"></input>\r\n                                    </div>\r\n                                    <div className=\"input-div\">\r\n                                        <FaMailBulk style={iconStyling}/>\r\n                                        <input value={user.email} name='email' required type=\"email\" autoComplete=\"off\" onChange={handleInputs} placeholder=\"Email\"></input>\r\n                                    </div>\r\n                                    <div className=\"input-div\">\r\n                                        <FaLock style={iconStyling}/>\r\n                                        <input value={user.password} name='password' required minLength=\"6\" type=\"password\" autoComplete=\"off\" onChange={handleInputs} placeholder=\"Password\"></input>\r\n                                    </div>\r\n                                    <div className=\"input-div\">\r\n                                        <FaLock style={iconStyling}/>\r\n                                        <input value={user.cpassword} name='cpassword' required minLength=\"6\" type=\"password\" autoComplete=\"off\" onChange={handleInputs} placeholder=\"Confirm Password\"></input>\r\n                                    </div>\r\n                                    <div className=\"submit-div\">\r\n                                        <input type=\"submit\" value=\"Sign Up\"></input>\r\n                                        <Link to=\"/login\">Existing User?</Link>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './PageNotFound.css';\r\n\r\nconst PageNotFound = () =>{\r\n    \r\n    return(\r\n        <>\r\n        <div style={{color: '#fff'}} className='container-404'>\r\n            <div className=\"text\">\r\n                <div>404!</div>\r\n                <div>Page not found</div>\r\n            </div>\r\n            <div className=\"go-back-btn\">\r\n                <Link to='/'>\r\n                    Take me back!\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import React, {useEffect} from  'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Logout = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function callLogout(){\r\n            try {\r\n                const res = await fetch('https://rekordss.onrender.com/logout', {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                       \"Content-Type\": \"application/json\",\r\n                    },\r\n                    credentials: \"include\",\r\n                });\r\n    \r\n                const data = await res.json();\r\n                \r\n                if(data && res.status === 201){\r\n                    history.push('/login');\r\n                }\r\n            } catch (error) {\r\n                console.log('Logout error: '+error);\r\n                history.push('/login');\r\n            }\r\n        }\r\n        callLogout();\r\n    })\r\n\r\n    return(\r\n        <h2 style={{color: \"#000\"}}>Logout Page</h2>\r\n    );\r\n}\r\n\r\nexport default Logout;","export default __webpack_public_path__ + \"static/media/default-user-image.d10208d9.jpeg\";","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport DefaultImage from '../../resources/default-user-image.jpeg';\r\n\r\nconst AboutUser = ({user}) => {\r\n\r\n    const [userImg, setUserImg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(!user.profilePic)\r\n            setUserImg(DefaultImage);\r\n        else\r\n            setUserImg(user.profilePic);\r\n    }, [user.profilePic]);\r\n\r\n    let regDate = user.registeredOn;\r\n    const year = regDate.substring(0, 4);\r\n    const month = regDate.substring(5, 7);\r\n    const day = regDate.substring(8, 10);\r\n    regDate = `${day} - ${month} - ${year}`;\r\n\r\n    return(\r\n        <>\r\n            <div className=\"user-img-container\">\r\n                <img src={userImg} alt=\"User-Pic\" />\r\n            </div>\r\n            <ul>\r\n                <li id=\"user-name\"><Link to=\"/myprofile\">{user.username}</Link></li>\r\n                <li id=\"user-registration-date\"><span>Registered: </span>{regDate}</li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutUser;","export default __webpack_public_path__ + \"static/media/loading_gif.15175f46.gif\";","export default __webpack_public_path__ + \"static/media/Vocabulary.68b296a7.png\";","export default __webpack_public_path__ + \"static/media/Programming.8bb0ded3.jpg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport VocabularyImage from '../../resources/Vocabulary.png';\r\nimport ProgrammingImage from '../../resources/Programming.jpg'\r\n\r\nconst OptionsForUser = () => {\r\n\r\n    const optionsArray=[\r\n        {name: 'Vocabulary', imgSrc: VocabularyImage, link: '/vocabulary', description: 'This is a demo description for vocabulary'},\r\n        {name: 'Programming', imgSrc: ProgrammingImage, link: '/programming', description: 'This is a demo description for coding'},\r\n        ];\r\n\r\n    return(\r\n        <>\r\n            <h2 id=\"options-heading\">Our Services</h2>\r\n            {\r\n                optionsArray.map((option, index) => {\r\n                    return(\r\n                        <li key={index} className=\"option-details\">\r\n                            <Link to={option.link}><img src={option.imgSrc} alt={option.name}/></Link>\r\n                            <Link to={option.link}><h2 id=\"option-name\">{option.name}</h2></Link>\r\n                        </li>\r\n                    );\r\n                })\r\n            }                \r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptionsForUser;","import React from 'react';\r\nimport './Dashboard.css';\r\nimport Navbar from '../common/Navbar';\r\nimport AboutUser from './AboutUser';\r\nimport LoadingGIF from '../../resources/loading_gif.gif';\r\nimport OptionsForUser from './OptionsForUser';\r\n \r\n\r\nconst Dashboard = ({user}) => {\r\n    const NavbarContents = [{name: 'logout', link:'/logout'}];\r\n\r\n    return(\r\n        <section className=\"dashboard\">\r\n            <div className=\"container\">\r\n                <Navbar contents={NavbarContents}/>\r\n                <div className=\"main-content\">\r\n                    <div className=\"left-col\">\r\n                        <div className=\"user-data\">\r\n                            { !user ? <img src={LoadingGIF} alt=\"loading\" /> : <AboutUser user={user}/>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-col\">\r\n                        <OptionsForUser/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport {Link as ScrollLink} from 'react-scroll';\r\nimport { FaBook, FaCode} from \"react-icons/fa\";\r\n\r\nconst Poster = () => {\r\n\r\n    const iconArray = [{alias: FaBook, linkToID: 'Vocabulary'}, {alias: FaCode, linkToID: 'Programming'}]\r\n    const phrase = \"Keep track of your progress elegantly!!\";\r\n\r\n    return(\r\n    <>\r\n        <div className=\"poster\">\r\n            <div className=\"center-div\">\r\n                <div className=\"text\">{phrase}</div>\r\n                <div className=\"icons\">\r\n                    {\r\n                        iconArray.map((icon, index)=>{\r\n                            return <li key={index}><ScrollLink to={icon.linkToID} smooth={true} offset={-80}><icon.alias className=\"poster-icon\"/></ScrollLink></li>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Poster;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport VocabularyImage from '../../resources/Vocabulary.png';\r\nimport ProgrammingImage from '../../resources/Programming.jpg'\r\n\r\nconst Options = () => {\r\n\r\n    const optionsArray=[\r\n                        {name: 'Vocabulary', imgSrc: VocabularyImage, link: '/vocabularyOverview', description: \"Are you trying to increase your vocabulary but can't find a place to document it well ? Worry no more, this is just the perfect place for it. Supported with the basic functionalities of adding and deleting words as well as loaded with additional features like grouping words and searching the word meanings to assist you . \"},\r\n                        {name: 'Programming', imgSrc: ProgrammingImage, link: '/programmingOverview', description: \"This is a demo description for coding . \"},\r\n                        ];\r\n\r\n    return(\r\n    <>\r\n        <div className=\"options\" id=\"options\">\r\n            <div className=\"center-div\">\r\n                {\r\n                    optionsArray.map((option, index)=>{\r\n                        if(index%2 === 0){\r\n                            return (\r\n                                <li key={index}>\r\n                                    <div className=\"option-details\" id={option.name}>\r\n                                        <div className=\"option-image\"><Link to={option.link}><img src={option.imgSrc} alt={optionsArray.name}/></Link></div>\r\n                                        <div className=\"option-about\">\r\n                                            <p className=\"name\">{option.name}</p>\r\n                                            <p className=\"description\">{option.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        }\r\n                        else{\r\n                            return (\r\n                                <li key={index}>\r\n                                    <div className=\"option-details\" id={option.name}>\r\n                                        <div className=\"option-about\">\r\n                                            <p className=\"name\">{option.name}</p>\r\n                                            <p className=\"description\">{option.description}</p>\r\n                                        </div>\r\n                                        <div className=\"option-image\"><Link to={option.link}><img src={option.imgSrc} alt={optionsArray.name}/></Link></div>\r\n                                    </div>\r\n                                </li>    \r\n                            );\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Options;","import './HomePage.css'\r\nimport Navbar from '../common/Navbar';\r\nimport Footer from '../common/Footer';\r\nimport Poster from './Poster';\r\nimport Options from './Options';\r\n\r\nconst HomePage = () => {\r\n  const NavbarContents = [{name: 'login', link:'/login'}];\r\n  \r\n  return (\r\n      <section className=\"homepage\">\r\n        <div className=\"container\">\r\n          <Navbar contents={NavbarContents}/>\r\n          <div className=\"main-content\">\r\n            <Poster/>\r\n            <Options/>\r\n          </div>\r\n          <Footer/>\r\n        </div>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport LoadingGIF from '../../resources/loading_gif.gif';\r\n\r\nconst LoaderContainer = () =>{\r\n    const containerStyle = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"loader-container\" style={containerStyle}>\r\n                <img src={LoadingGIF} alt=\"loader\"/>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default LoaderContainer;","import React, { useEffect, useState } from 'react';\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport HomePage from './homepage/HomePage';\r\nimport Loader from './common/LoaderContainer';\r\n\r\nconst SiteLandingPage = () => {\r\n\r\n  const [dataFetched, setDataFetched] = useState(false);\r\n  const [rootUser, setRootUser] = useState(null);\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n  const webURL = 'http://localhost:5000'\r\n\r\n  useEffect(() => {\r\n    async function siteLandingPage() {\r\n      try {\r\n        const res = await fetch(`${webURL}/home`, {\r\n          method: \"GET\",\r\n          headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n          },\r\n          credentials: \"include\",\r\n        });\r\n\r\n        const data = await res.json();\r\n        console.log(data);\r\n\r\n        if (data) {\r\n          setDataFetched(true);\r\n          if (res.status === 201) {\r\n            setRootUser(data.user);\r\n            setUserLoggedIn(true);\r\n          }\r\n          else if (res.status === 401) {\r\n            setUserLoggedIn(false);\r\n            console.clear();\r\n          }\r\n        }\r\n        else{\r\n            console.log(\"Data not fetched\");\r\n          }\r\n      }\r\n      catch (error) {\r\n        console.log('SiteLandingPage error: ' + error);\r\n      }\r\n    }\r\n    siteLandingPage();\r\n    // console.clear();\r\n  }, [userLoggedIn, dataFetched]);\r\n\r\n  return (\r\n    <>\r\n      {!dataFetched ? <Loader/> : userLoggedIn ? <Dashboard user={rootUser} /> : <HomePage />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SiteLandingPage;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Navbar from '../../../common/Navbar';\r\nimport { FaRegPlusSquare, FaTag, FaWindowClose, FaSortAlphaDown } from \"react-icons/fa\";\r\nimport './Vocabulary.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Vocabulary = () => {\r\n\r\n    const [allWords, setAllWords] = useState([]);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [addButton, setAddButton] = useState(false);\r\n    const [wordSortType, setWordSortType] = useState('default');\r\n    const searchBoxRef = useRef();\r\n    const wordClickCount = useRef(0);\r\n    const timer = useRef(null);\r\n    const [allLabels, setAllLabels] = useState([]);\r\n    const [wordSelected, setWordSelected] = useState(null);\r\n    const [labelFilter, setLabelFilter] = useState(null);\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState(null);\r\n    const NavbarContents = [{ name: 'logout', link: '/logout' }];\r\n\r\n    // To determine whether the user is authorized(if yes then retrieve the user from database)\r\n    useEffect(() => {\r\n        // So that whenever this component renders, the input box is automatically focused\r\n        searchBoxRef.current.focus();\r\n\r\n        async function callVocabulary() {\r\n            try {\r\n                const res = await fetch('https://rekordss.onrender.com/vocabulary', {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    credentials: \"include\",\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                if (data && res.status === 201) {\r\n                    setUser(data.user);\r\n                }\r\n                else {\r\n                    history.push('/login');\r\n                }\r\n            } catch (error) {\r\n                console.log('Vocabulary error: ' + error);\r\n                history.push('/login');\r\n            }\r\n        }\r\n        callVocabulary();\r\n    }, [history]);\r\n\r\n    // To set the list of all the words and labels(from database)\r\n    useEffect(() => {\r\n        if (user) {\r\n            const wordList = user.vocabulary;\r\n            let wordObjects = [];\r\n            for (let i = 1; i < wordList.length; i++) {\r\n                wordObjects.push(wordList[i]);\r\n            }\r\n            setAllLabels(wordList[0]);   //The 0th index has all the labels\r\n            setAllWords(wordObjects);\r\n            if (wordSelected === null)\r\n                setWordSelected(null);\r\n            else {\r\n                for (let i = 0; i < wordList.length; i++) {\r\n                    if (wordList[i].word === wordSelected.word) {\r\n                        setWordSelected(wordList[i]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [user, wordSelected]);\r\n\r\n    // To maintain the searchresults\r\n    useEffect(() => {\r\n        setSearchResults(allWords.filter((wordObj) => {\r\n            let SQ = searchQuery.trim();\r\n            return wordObj.word.includes(SQ);\r\n        }))\r\n\r\n    }, [allWords, searchQuery])\r\n\r\n    // To determine whether to display the add new word button or not\r\n    useEffect(() => {\r\n        let wordExistsAlready = false;\r\n        for (let i = 0; i < searchResults.length; i++) {\r\n            if (searchResults[i].word === searchQuery) {\r\n                wordExistsAlready = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (wordExistsAlready || searchQuery.trim() === '' || searchQuery.trim().length === 1) {\r\n            setAddButton(false);\r\n        }\r\n        else {\r\n            setAddButton(true);\r\n        }\r\n    }, [searchResults, searchQuery])\r\n\r\n    // UseEffect to filter by label\r\n    useEffect(() => {\r\n        let words = [];\r\n        if (labelFilter === null) {\r\n            words = allWords;\r\n        }\r\n        else {\r\n            for (let i = 0; i < allWords.length; i++) {\r\n                const labelsOfCurrWord = allWords[i].labels;\r\n                let hasLabel = false;\r\n                for (let i = 0; i < labelsOfCurrWord.length; i++) {\r\n                    if (labelsOfCurrWord[i] === labelFilter) {\r\n                        hasLabel = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (hasLabel)\r\n                    words.push(allWords[i]);\r\n            }\r\n            setSearchResults(words);\r\n        }\r\n        setSearchResults(words);\r\n    }, [labelFilter, allWords]);\r\n\r\n    // To handle the searchQuery value\r\n    function searchBarHandler(e) {\r\n        const word = e.target.value.toUpperCase();\r\n        setSearchQuery(word);\r\n    }\r\n\r\n    // Toast for error\r\n    const ErrorToast = (errorMsg) => {\r\n        toast.error(errorMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    // Toast for success\r\n    const SuccessToast = (succesMsg) => {\r\n        toast.success(succesMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    // function to add new word\r\n    async function addNewWord() {\r\n        try {\r\n            const res = await fetch('https://rekordss.onrender.com/vocabulary/addWord', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify({ newWord: searchQuery.trim(), username: user.username }),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data && res.status === 201) {\r\n                setUser(data.user);\r\n                SuccessToast(data.message);\r\n                setSearchQuery('');\r\n            }\r\n            else {\r\n                ErrorToast(data.error);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('AddWord error: ' + error);\r\n        }\r\n    }\r\n\r\n    // Function to set the label filter\r\n    function filterByLabel(selectedLabel) {\r\n        if (labelFilter === selectedLabel) {\r\n            setLabelFilter(null);\r\n        }\r\n        else {\r\n            setLabelFilter(selectedLabel);\r\n        }\r\n    }\r\n\r\n    // Function to handle clicks on a word\r\n    function selectWord(wordObj) {\r\n        wordClickCount.current++;  //count clicks\r\n        const DELAY = 500;\r\n\r\n        if (wordClickCount.current === 1) {\r\n            timer.current = setTimeout(function () {\r\n                if (wordObj !== wordSelected) {\r\n                    setWordSelected(wordObj);\r\n                }\r\n                else {\r\n                    setWordSelected(null);\r\n                }\r\n\r\n                wordClickCount.current = 0;             //after action performed, reset counter\r\n            }, DELAY);\r\n        }\r\n        else {\r\n            clearTimeout(timer.current);\r\n            searchWordMeaning(wordObj.word);\r\n            wordClickCount.current = 0;             //after action performed, reset counter\r\n        }\r\n    }\r\n\r\n    // Function to add a new label to an existing word\r\n    async function addNewLabelToWord(newLabel, wordObj) {\r\n        try {\r\n            const res = await fetch('https://rekordss.onrender.com/vocabulary/addNewLabelToWord', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify({ word: wordObj.word, newLabel, username: user.username }),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data && res.status === 201) {\r\n                setUser(data.user);\r\n            }\r\n            else {\r\n                ErrorToast(data.error);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('AddNewLabelToWord error: ' + error);\r\n        }\r\n    }\r\n\r\n    // Function to remove a label from an existing word\r\n    async function removeLabelFromWord(removeLabel, wordObj) {\r\n        try {\r\n            const res = await fetch('https://rekordss.onrender.com/vocabulary/removeLabelFromWord', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                credentials: \"include\",\r\n                body: JSON.stringify({ word: wordObj.word, removeLabel, username: user.username }),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data && res.status === 201) {\r\n                setUser(data.user);\r\n            }\r\n            else {\r\n                ErrorToast(data.error);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('RemoveLabelFromWord error: ' + error);\r\n        }\r\n    }\r\n\r\n    // Function to close the word's label(basically, unselect the word)\r\n    function closeLabels() {\r\n        setWordSelected(null);\r\n    }\r\n\r\n    // function to delete a word\r\n    async function deleteWord() {\r\n        if (window.confirm(`Do you want to delete '${wordSelected.word}' ?`)) {\r\n            try {\r\n                const res = await fetch('https://rekordss.onrender.com/vocabulary/deleteWord', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    credentials: \"include\",\r\n                    body: JSON.stringify({ word: wordSelected.word, username: user.username }),\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                if (data && res.status === 201) {\r\n                    setUser(data.user);\r\n                    SuccessToast(data.message);\r\n                    setWordSelected(null);\r\n                }\r\n                else {\r\n                    ErrorToast(data.error);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log('DeleteWord error: ' + error);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function to search the meaning of a word in new tab\r\n    function searchWordMeaning(word) {\r\n        word = word.toLowerCase();\r\n        let googleSearchQuery = `https://www.oxfordlearnersdictionaries.com/definition/english/${word}_1?q=${word}`;\r\n        window.open(googleSearchQuery, \"_blank\");\r\n    }\r\n\r\n    // Function to sort the results\r\n    function sortResult(){\r\n        console.log('Clicked');\r\n        if(wordSortType === \"default\"){\r\n            let temp = searchResults;\r\n            temp.sort(function(x, y) {\r\n                if (x.word < y.word) {\r\n                  return -1;\r\n                }\r\n                if (x.word > y.word) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            \r\n            setSearchResults(temp);\r\n            setWordSortType(\"alphabetical\");\r\n        }\r\n        else{\r\n            let temp = searchResults;\r\n            temp.sort(function(x, y) {\r\n                if (x.idx < y.idx) {\r\n                  return -1;\r\n                }\r\n                if (x.idx > y.idx) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n            });\r\n\r\n            setSearchResults(temp);\r\n            setWordSortType(\"default\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer style={{ fontSize: \"2rem\" }} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} limit={3} theme={\"dark\"} pauseOnFocusLoss={false} draggable pauseOnHover={false} />\r\n            <section className=\"vocabulary\">\r\n                <div className=\"container\">\r\n                    <Navbar contents={NavbarContents} />\r\n                    <div className=\"main-content\">\r\n                        <div className=\"search-bar-container\">\r\n                            <input ref={searchBoxRef} id=\"new-word\" maxLength=\"15\" type=\"text\" placeholder=\"Enter word\" value={searchQuery} onChange={(e) => searchBarHandler(e)} />\r\n                            {addButton && <FaRegPlusSquare className=\"icons\" onClick={addNewWord} />}\r\n                        </div>\r\n                        <div className=\"labels-container\">\r\n                            {\r\n                                wordSelected === null ?\r\n                                    <>{\r\n                                        user !== null ? <>\r\n                                            <span>Tags</span>\r\n                                            {\r\n                                                allLabels.length > 0 ?\r\n                                                    <ul>\r\n                                                        {\r\n                                                            allLabels.map((currLabel, index) => {\r\n                                                                if (currLabel === labelFilter) {\r\n                                                                    return <li key={index} className=\"all-labels\" style={{ backgroundColor: \"lightgreen\" }} onClick={() => filterByLabel(currLabel)}>{currLabel}</li>\r\n                                                                }\r\n                                                                else {\r\n                                                                    return <li key={index} className=\"all-labels unselected-labels\" onClick={() => filterByLabel(currLabel)}>{currLabel}</li>\r\n                                                                }\r\n                                                            })\r\n                                                        }\r\n                                                    </ul> : <span>No available tags</span>\r\n                                            }\r\n                                        </>\r\n                                            : <h2 id='loading-text'>Loading...</h2>     //This will be displayed when the data is being fetched from the database\r\n                                    }\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <FaWindowClose id=\"close-icon\" onClick={closeLabels} />\r\n                                        <h2 id=\"word-label-heading\">{wordSelected.word}</h2>\r\n                                        <ul>\r\n                                            {\r\n                                                allLabels.map((currLabel, index) => {\r\n                                                    let labelFound = false;\r\n                                                    let wordLabels = wordSelected.labels;\r\n                                                    for (let i = 0; i < wordLabels.length; i++) {\r\n                                                        if (currLabel === wordLabels[i]) {\r\n                                                            labelFound = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (labelFound)\r\n                                                        return <li key={index} className=\"added-labels\" onClick={() => removeLabelFromWord(currLabel, wordSelected)}>{currLabel}</li>\r\n                                                    else\r\n                                                        return <li key={index} className=\"addable-labels\" onClick={() => addNewLabelToWord(currLabel, wordSelected)}>{currLabel}</li>\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                        <button id=\"delete-word-btn\" onClick={deleteWord}>Delete word</button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            user && <div className=\"words-container\">\r\n                                <div className=\"top-container\">\r\n                                    <div className=\"tools\">\r\n                                        <FaSortAlphaDown className='icons' onClick={sortResult}/>\r\n                                    </div>\r\n                                    <h2>Results</h2>\r\n                                </div>\r\n                                <ul>\r\n                                    {\r\n                                        searchResults.map((wordObj, index) => {\r\n                                            const word = wordObj.word;\r\n                                            return <li key={index}>{index + 1}. <span onClick={() => {selectWord(wordObj)}} onDoubleClick={(e) => e.preventDefault()}>{word}</span><FaTag className=\"label-icons\" onClick={() => { selectWord(wordObj) }} /></li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Vocabulary;","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Navbar from '../../../common/Navbar';\r\n\r\n\r\nconst Programming = () =>{\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState('');\r\n    const NavbarContents = [];\r\n\r\n    useEffect(() => {\r\n        async function callProgramming(){\r\n            try {\r\n                const res = await fetch('https://rekordss.onrender.com/programming', {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                       \"Content-Type\": \"application/json\",\r\n                    },\r\n                    credentials: \"include\",\r\n                });\r\n    \r\n                const data = await res.json();\r\n                \r\n                if(data && res.status === 201){\r\n                    setUser(data.user);\r\n                }\r\n                else{\r\n                    history.push('/login');\r\n                }\r\n            } catch (error) {\r\n                console.log('Dashboard error: '+error);\r\n                history.push('/login');\r\n            }\r\n        }\r\n        callProgramming();\r\n    }, [history]);\r\n\r\n\r\n    return(\r\n        <>\r\n            <section className=\"programming\">\r\n                <div className=\"container\">\r\n                    <Navbar contents={NavbarContents}/>\r\n                </div>\r\n                <div className=\"main-content\">\r\n                    <h2 style={{color: \"#000\"}}>Programming {user.name}</h2>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Programming;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from '../../common/Navbar';\r\n\r\nconst UserNotFound = () => {\r\n    const NavbarContents = [];\r\n\r\n    return(\r\n        <>\r\n        <div className=\"container\">\r\n            <Navbar contents={NavbarContents}/>\r\n            <div className=\"main-content\">\r\n                <div id=\"user-not-found\">\r\n                    <p>User Not Found</p>\r\n                    <Link to=\"/\">Take me home!</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n} \r\n\r\nexport default UserNotFound;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst BottomContainer = ({userProgress}) => {\r\n\r\n    let vocabularyProgress;\r\n    let programmingProgress;\r\n\r\n    for(let i=0; i<userProgress.length; i++){\r\n        let optionName = userProgress[i].optionName;\r\n        if(optionName === 'vocabulary')\r\n            vocabularyProgress = userProgress[i];\r\n        else if(optionName === 'programming')\r\n            programmingProgress = userProgress[i];\r\n    }\r\n    vocabularyProgress.link = \"/vocabulary\";\r\n    programmingProgress.link = \"/programming\";\r\n\r\n    return(\r\n        <>\r\n            <div className=\"inner-container\">\r\n                {/* Vocabulary */}\r\n                <div className=\"option-div\">\r\n                    <div className=\"option-name\">\r\n                        <Link to={vocabularyProgress.link}><h2>{vocabularyProgress.optionName}</h2></Link>\r\n                    </div>\r\n                    <div className=\"option-stats\">\r\n                        <h3>Words Added : <span>{vocabularyProgress.addedWords}</span></h3>\r\n                        <h3>Words Deleted : <span>{vocabularyProgress.deletedWords}</span></h3>\r\n                        <h3>Current Word Count : <span>{vocabularyProgress.addedWords - vocabularyProgress.deletedWords}</span></h3>\r\n                        <h3>Last Commit : <span>{vocabularyProgress.lastCommit}</span></h3>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Programming */}\r\n                <div className=\"option-div\">\r\n                    <div className=\"option-name\">\r\n                        <Link to={programmingProgress.link}><h2>{programmingProgress.optionName}</h2></Link>\r\n                    </div>\r\n                    <div className=\"option-stats\">\r\n                        <h3>Solved Questions : <span>{programmingProgress.questionSolved}</span></h3>\r\n                        <h3>Total Doubts : <span>{programmingProgress.totalDoubts}</span></h3>\r\n                        <h3>Solved Doubts : <span>{programmingProgress.solvedDoubts}</span></h3>\r\n                        <h3>Unsolved Doubts : <span>{programmingProgress.totalDoubts - programmingProgress.solvedDoubts}</span></h3>\r\n                        <h3>Last Commit : <span>{programmingProgress.lastCommit}</span></h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BottomContainer;","import React, { useRef, useState, useEffect } from 'react';\r\nimport DefaultImage from '../../../resources/default-user-image.jpeg';\r\nimport { MdCheckCircleOutline } from 'react-icons/md';\r\nimport BottomContainer from './BottomContainer';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbar from '../../common/Navbar';\r\n\r\n\r\nconst UserProfile = ({ user, userProgress }) => {\r\n\r\n    let { username,  phone, email } = user;\r\n    const NavbarContents = [{ name: 'logout', link: '/logout' }];\r\n\r\n    const [newUsername, setNewUsername] = useState(user.username);\r\n    const [newPhone, setnewPhone] = useState(user.phone);\r\n    const [image, setImage] = useState(null);\r\n    const [userImg, setUserImg] = useState(null);\r\n    const [initialImage, setInitialImage] = useState(null);\r\n    const userImgInputRef = useRef();\r\n    const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n    // Function to check if the button to change image has been clicked\r\n    function imgButtonClicked(event) {\r\n        event.preventDefault();\r\n        userImgInputRef.current.click();\r\n    }\r\n\r\n    // Error Toast\r\n    const ErrorToast = (errorMsg) => {\r\n        toast.error(errorMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    // Success Toast\r\n    const SuccesToast = (succesMsg) => {\r\n        toast.success(succesMsg, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    // To give an initial image to the user when the page loads\r\n    useEffect(() => {\r\n        if (!user.profilePic) {\r\n            setUserImg(DefaultImage);\r\n            setInitialImage(DefaultImage);\r\n        }\r\n        else {\r\n            setUserImg(user.profilePic);\r\n            setInitialImage(user.profilePic);\r\n        }\r\n    }, [user.profilePic]);\r\n\r\n    // When we upload an image\r\n    useEffect(() => {\r\n        if (image) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setUserImg(reader.result);\r\n            }\r\n            reader.readAsDataURL(image);\r\n        }\r\n        else {\r\n            setUserImg(initialImage);\r\n        }\r\n    }, [image, initialImage]);\r\n\r\n    // Function to reflect these changes in the database\r\n    async function saveChanges() {\r\n        const res = await fetch('.https://rekordss.onrender.com/updateUserData', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ newUsername, newPhone, userImg, email })\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        // 201 means success\r\n        if (!data || res.status !== 201) {\r\n            ErrorToast(data.error)\r\n        }\r\n        else {\r\n            SuccesToast(data.message);\r\n        }\r\n    }\r\n\r\n    // Whenever we update any content(image, username, phone number)\r\n    function contentUpdated(event) {\r\n        if (event.target.name === \"username\") {\r\n            setNewUsername(event.target.value);\r\n        }\r\n        else if (event.target.name === \"phone\") {\r\n            setnewPhone(event.target.value);\r\n        }\r\n        else if (event.target.name === \"profile-pic\") {\r\n            const file = event.target.files[0];\r\n            if (file && file.type.substr(0, 5) === \"image\") {\r\n                setImage(file);\r\n            }\r\n            else {\r\n                setImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    // to check whether all the mutable fields are same as the initial ones or not\r\n    useEffect(() => {\r\n        if (newUsername !== username || newPhone !== phone || initialImage !== userImg) {\r\n            setIsUpdated(true);\r\n        }\r\n        else {\r\n            setIsUpdated(false);\r\n        }\r\n    }, [newUsername, newPhone, username, phone, initialImage, userImg]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Navbar contents={NavbarContents} />\r\n                <div className=\"main-content\">\r\n                    <ToastContainer style={{ fontSize: \"2rem\" }} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} limit={2} theme={\"dark\"} pauseOnFocusLoss={false} draggable pauseOnHover={false} />\r\n                    <div className=\"top-div\">\r\n                        <div className=\"basic-info\">\r\n                            {isUpdated && <MdCheckCircleOutline onClick={() => saveChanges()} id=\"save-icon\" />}\r\n                            <div className=\"col-left\">\r\n                                <div className=\"user-img-container\">\r\n                                    <img src={userImg} alt=\"User-Pic\" />\r\n                                    <button onClick={(event) => imgButtonClicked(event)}>Change Image</button>\r\n                                    <input type=\"file\" ref={userImgInputRef} name=\"profile-pic\" onChange={(event) => contentUpdated(event)} accept=\"image/jpeg\" />       {/* gif is taking too much time while loading the page */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-right\">\r\n                                <input type=\"text\" name=\"username\" autoComplete=\"off\" placeholder=\"Username\" maxLength=\"10\" value={newUsername} onChange={(event) => contentUpdated(event)} />\r\n                                <input type=\"tel\" name=\"phone\" minLength=\"10\" autoComplete=\"off\" placeholder=\"Phone\" maxLength=\"10\" value={newPhone} onChange={(event) => contentUpdated(event)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"middle-div\">\r\n                        <h2>{email}</h2>\r\n                    </div>\r\n                    <div className=\"bottom-div\">\r\n                        <h2>Statistics</h2>\r\n                        <BottomContainer userProgress={userProgress}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React, {useEffect, useState} from 'react';\r\nimport './Profile.css';\r\nimport {useHistory} from 'react-router-dom'\r\nimport UserNotFound from './UserNotFound';\r\nimport UserProfile from './UserProfile';\r\nimport Loader from '../../common/LoaderContainer';\r\n\r\n\r\nconst Profile = () => {\r\n    const [rootUser, setRootUser] = useState(null);\r\n    const [userProgress, setUserProgress] = useState(null);\r\n    const history = useHistory();\r\n    const [dataFetched, setDataFetched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function callProfile(){\r\n            try {\r\n                const res = await fetch(`https://rekordss.onrender.com/myprofile`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                       \"Content-Type\": \"application/json\",\r\n                    },\r\n                    credentials: \"include\",\r\n                });\r\n    \r\n                const data = await res.json();\r\n                \r\n                if(data){\r\n                    setDataFetched(true);\r\n                    if(res.status === 201){\r\n                        setUserProgress(data.userProgress);\r\n                        setRootUser(data.user);\r\n                    }\r\n                }\r\n                else{ \r\n                    history.push('/login');\r\n                }\r\n            } catch (error) {\r\n                console.log('Profile error: '+error);\r\n                history.push('/login');\r\n            }\r\n        } \r\n        callProfile();\r\n    }, [history])\r\n\r\n\r\n    return(\r\n        <>\r\n            <section className=\"profile\">\r\n                {\r\n                    !dataFetched?<Loader/>:rootUser ? <UserProfile user={rootUser} userProgress={userProgress} />:<UserNotFound/>\r\n                }\r\n            </section> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import Login from './components/login-register/Login';\nimport Register from './components/login-register/Register';\nimport PageNotFound from './components/common/PageNotFound';\nimport Logout from './components/common/Logout';\nimport SiteLandingPage from './components/SiteLandingPage';\nimport Vocabulary from './components/private/options/vocabulary/Vocabulary';\nimport Programming from './components/private/options/programming/Programming';\nimport ProfilePage from  './components/private/profile/Profile';\nimport {Route, Switch} from 'react-router-dom';\n\nconst App = () => {\n  return ( \n    <>\n      <Switch>\n        <Route exact path =\"/\" component={SiteLandingPage}/>\n        <Route exact path =\"/login\" component={Login}/>\n        <Route exact path =\"/register\" component={Register}/>\n        <Route exact path =\"/vocabulary\" component={Vocabulary}/>\n        <Route exact path =\"/programming\" component={Programming}/>\n        <Route exact path =\"/logout\" component={Logout}/>\n        <Route exact path =\"/myprofile\" component={ProfilePage}/>\n        <Route path=\"*\" component={PageNotFound}/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}